version: '3.8'

services:
  db:
    image: postgres:14
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5555:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6390:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: >
      sh -c "
      mkdir -p /app/app/logs &&
      chmod -R 777 /app/app/logs &&
      poetry run hypercorn app.main:app --bind 0.0.0.0:8000
      "
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
      INFURA_API_KEY: ${INFURA_API_KEY}
      REDIS_URL: redis://redis:6390/0

  alembic:
    build:
      context: .
      dockerfile: Dockerfile.alembic
    command: poetry run alembic -c /app/alembic.ini upgrade head
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - .:/app

  celery:
    build: .
    command: poetry run celery -A app.celery.celery_config.celery_app worker --loglevel=info
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
      INFURA_API_KEY: ${INFURA_API_KEY}
      REDIS_URL: redis://redis:6379/0

  celery_beat:
    build: .
    command: poetry run celery -A app.celery.celery_config.celery_app beat --loglevel=info
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
      INFURA_API_KEY: ${INFURA_API_KEY}
      REDIS_URL: redis://redis:6379/0

  test:
    build: .
    command: poetry run pytest --disable-warnings
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
      INFURA_API_KEY: ${INFURA_API_KEY}
      REDIS_URL: redis://redis:6390/0
    volumes:
      - .:/app

volumes:
  postgres_data:
